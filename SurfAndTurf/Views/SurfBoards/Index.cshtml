@model PaginatedList<SurfAndTurf.Models.SurfBoard>

@{
    ViewData["Title"] = "Boards";
}

<h1>Boards</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@{
    var isGuest = User.Identity.Name?.ToUpper() == "GUEST@GUEST.COM";
}

@if (!User.Identity.IsAuthenticated || isGuest)
{
    <div class="alert alert-info">
        Note: Only a limited number of surfboards are displayed for guests. Please <a href="/Account/Login">Login</a> or <a href="/Account/Register">Register</a> to view all available surfboards and access additional features.
    </div>
}

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                Image url
            </th>
            <th>
                Name
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TypeSortParm"]"asp-route-currentFilter="@ViewData["CurrentFilter"]">Type</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["LengthSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Length</a>
            <th>
                Width
            </th>
            <th>
                Thickness
            </th>
            <th>
                Volume
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]"asp-route-currentFilter="@ViewData["CurrentFilter"]">Price</a>
            <th>
                Equipment
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <img src="@Html.DisplayFor(modelItem => item.ImageUrl)" alt="Board image" height="125">
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Length)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Width)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Thickness)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Volume)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Equipment)
            </td>
              

            @if (User.IsInRole("Admin"))
{
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            }
            else if (User.IsInRole("Customer"))
{
                <td>
                    <a asp-action="Rent" asp-route-id="@item.Id">Rent</a>
                </td>
            }
            else
            {
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                        <a asp-action="Rent" asp-route-id="@item.Id">Rent</a>
                </td>
            }
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
