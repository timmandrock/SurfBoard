@using MyBlazorShop.Libraries.Services.Product
@using MyBlazorShop.Libraries.Services.Product.Models
@using MyBlazorShop.Libraries.Services.Storage
@using System.Text.Json
@using BlazorBootstrap
@page "/"
@inject IProductService productService
@inject IStorageService storageService

<PageTitle>Product listings</PageTitle>
<HeadContent>
    <meta name="description" content="Product listing page" />
</HeadContent>
<Hero Title="Shop" Description="Share your love of technology, and spread good cheer, with Binaryville official merchandise, including t-shirts, hats, mugs, aprons, posters, stickers, and more. Each unique treasure features a charming Binaryville robot, encapsulated inside a motivating historical quote, cleverly updated for the times. Even the most hard-to-please individuals can't resist these infectious designs. Perfect for the techie in your life!" Image="product-montage.png" BackgroundImage="shop-hero-yellow"></Hero>

@if (Products?.Any() ?? false)
{
    <main class="margin-horizontal:auto max-width:container padding-horizontal:32">
        <div id="vue-shop" class="margin-bottom:32 quenched">
            <div class="display:flex flex-grow:1 flex-wrap:wrap margin-bottom:-32 margin-horizontal:-16">
                <div class="display:flex flex-direction:column flex-grow:0 flex-shrink:0 margin-bottom:32 padding-horizontal:16 width:100 @@mq-768--width:100">
                    <ul class="display:flex flex-grow:1 flex-wrap:wrap margin-bottom:-32 margin-horizontal:-16">
                        @foreach(var product in Products)
                        {
                            <ProductListingItem Product="product"></ProductListingItem>
                        }                        
                    </ul>
                </div>
            </div>
        </div>
    </main>
    <Pagination TotalPages="10" 
    ActivePageNumber="@CurrentPageNum"
    Alignment="Alignment.Center"
    FirstLinkIcon="IconName.ChevronDoubleLeft"
    PreviousLinkIcon="IconName.ChevronLeft"
    NextLinkIcon="IconName.ChevronRight"
    LastLinkIcon="IconName.ChevronDoubleRight"
    PageChanged="OnPageChangedAsync" />
}
<text>Current Page Number: @CurrentPageNum</text>
@code {
    public IList<ProductModel> Products { get; set; }
    public int CurrentPageNum { get; set; } = 1;
    private List<ProductModel> t;

    protected override async Task OnInitializedAsync()
    {
        t = await storageService.GetAll();
        GetPage();
    }

    private void OnPageChangedAsync(int newPageNumber)
    {
        CurrentPageNum = newPageNumber;
        GetPage();
        StateHasChanged();
    }

    private void GetPage()
    {
        int pageSize = 2; //change number of boards in page.

        // Calculate the starting index of products for the current page
        int index = (CurrentPageNum - 1) * pageSize;

        // Calculate the number of products to display on the current page
        int count = Math.Min(pageSize, t.Count - index);

        // Update the Products list with the products for the current page
        Products = t.GetRange(index, count);
    }
}